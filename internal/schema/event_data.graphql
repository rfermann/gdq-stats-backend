scalar Date

enum EventDataType {
    DONATIONS
    DONATIONS_PER_MINUTE
    DONORS
    TWEETS
    TWEETS_PER_MINUTE
    TWITCH_CHATS
    TWITCH_CHATS_PER_MINUTE
    VIEWERS
}

type EventDatum {
    timestamp: Date!
    donations: Float!
    donationsPerMinute: Float!
    donors: Int!
    tweets: Int!
    tweetsPerMinute: Int!
    twitchChats: Int!
    twitchChatsPerMinute: Int!
    viewers: Int!
}

type EventDatumPayload {
    timestamp: Date!
    value: Float!
}

type EventDataResponse {
    eventDataType: EventDataType!
    eventData: [EventDatumPayload!]!
}

input MigrateEventDataInput {
    eventId: ID!
}


input GetEventDataInput {
    eventDataType: EventDataType!
    event: GetEventInformationInput
}

extend type Query {
    getEventData(input: GetEventDataInput): EventDataResponse!
}

extend type Mutation {
    migrateEventData(input: MigrateEventDataInput!): [EventDatum!]!
}
