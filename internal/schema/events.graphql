type Event {
    id: ID!
    eventType: EventType!
    year: Int!
    activeEvent: Boolean!
    startDate: Date!
    donations: Float!
    donors: Int!
    completedGames: Int!
    totalGames: Int!
    tweets: Int!
    twitchChats: Int!
    scheduleId: Int!
    viewers: Int!
    eventDataCount: Int!
}

input GetEventInformationInput {
    name: String!
    year: Int!
}

input CreateEventInput {
    scheduleId: Int!
    eventTypeId: ID!
}

input ActivateEventInput {
    id: ID!
}

input AggregateEventStatisticsInput {
    id: ID!
}

extend type Query {
    getAlternativeEvents(input: GetEventInformationInput): [Event!]!
    getCurrentEvent: Event!
    getEvent(input: GetEventInformationInput): Event!
    getEvents: [Event!]!
}

extend type Mutation {
    createEvent(input: CreateEventInput!): Event!
    activateEvent(input: ActivateEventInput!): Event!
    aggregateEventStatistics(input: AggregateEventStatisticsInput): Event!
}
